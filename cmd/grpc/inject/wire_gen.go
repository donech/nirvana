// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package inject

import (
	"github.com/donech/nirvana/internal/config"
	grpc2 "github.com/donech/nirvana/internal/entry/grpc"
	"github.com/donech/tool/entry/grpc"
	"github.com/donech/tool/xlog"
	"github.com/spf13/viper"
	"go.uber.org/zap"
)

// Injectors from wire.go:

func InitApplication() (*grpc.Entry, func(), error) {
	viperViper := viper.GetViper()
	configConfig := config.New(viperViper)
	logger, err := providerLogger(configConfig)
	if err != nil {
		return nil, nil, err
	}
	registeServer := grpc2.NewRegisteServer()
	entry := grpc2.NewEntry(configConfig, logger, registeServer)
	return entry, func() {
	}, nil
}

// wire.go:

func providerLogger(conf *config.Config) (logger *zap.Logger, err error) {
	return xlog.New(conf.Log)
}
